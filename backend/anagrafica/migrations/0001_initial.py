# Generated by Django 5.2.5 on 2025-08-27 18:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DatiAnagrafici',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('cognome', models.CharField(blank=True, max_length=50)),
                ('nome', models.CharField(blank=True, max_length=50)),
                ('sesso', models.CharField(blank=True, choices=[('M', 'Maschio'), ('F', 'Femmina')], max_length=1)),
                ('data_nascita', models.DateField(blank=True, null=True)),
                ('provincia_nascita', models.CharField(blank=True, max_length=2)),
                ('comune_nascita', models.CharField(blank=True, max_length=100)),
                ('fiscalmente_a_carico', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dati_anagrafici', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contatti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono_cellulare', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dati_anagrafici', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contatti', to='anagrafica.datianagrafici')),
            ],
        ),
        migrations.CreateModel(
            name='DomicilioFiscale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia', models.CharField(max_length=2)),
                ('comune', models.CharField(max_length=100)),
                ('codice_catastale', models.CharField(max_length=4)),
                ('casi_particolari_regionali', models.CharField(blank=True, max_length=100, null=True)),
                ('fusione_comune', models.CharField(blank=True, max_length=100, null=True)),
                ('data_validita', models.DateField()),
                ('dati_anagrafici', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domicili_fiscali', to='anagrafica.datianagrafici')),
            ],
        ),
        migrations.CreateModel(
            name='Residenza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia_residenza', models.CharField(blank=True, max_length=2, null=True)),
                ('comune_residenza', models.CharField(blank=True, max_length=100, null=True)),
                ('codice_catastale_residenza', models.CharField(blank=True, max_length=4, null=True)),
                ('cap', models.CharField(blank=True, max_length=5, null=True)),
                ('tipologia_via', models.CharField(blank=True, max_length=20, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=200, null=True)),
                ('numero_civico', models.CharField(blank=True, max_length=10, null=True)),
                ('frazione', models.CharField(blank=True, max_length=50, null=True)),
                ('data_variazione_residenza', models.DateField(blank=True, null=True)),
                ('prima_dichiarazione', models.BooleanField(default=False)),
                ('dati_anagrafici', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='residenza', to='anagrafica.datianagrafici')),
            ],
        ),
    ]
